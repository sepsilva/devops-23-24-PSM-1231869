pipeline {
    agent any

    environment {
        CA_DIR = 'CA2/Part2/react-and-spring-data-rest-basic'
        DOCKER_DIR = 'CA5'
    }

    //CHECKOUT STAGE
    stages {
        //What repository to checkout
        stage('Checkout') {
            steps {
                echo 'Checking out repo...'
                git branch: 'main', url: 'https://github.com/sepsilva/devops-23-24-PSM-1231869.git'
            }
        }

        //ASSEMBLE STAGE
        stage('Assemble') {
            steps {
                echo 'Assembling project...'
                dir(env.CA_DIR) {
                    //Change gradlew permissions
                    sh 'chmod +x gradlew'
                    sh './gradlew assemble'
                }
            }
        }

        //TEST STAGE
        stage('Test') {
            steps {
                echo 'Testing project...'
                dir(env.CA_DIR) {
                    sh './gradlew test'
                }
            }
        }

        //GENERATE JAVADOCS AND PUBLISH IT
        stage('Javadocs') {
            steps {
                echo 'Generating Javadocs...'
                dir(env.CA_DIR) {
                    sh './gradlew javadoc'
                }
                publishHTML(target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir: 'CA2/Part2/react-and-spring-data-rest-basic/build/docs/javadoc',
                    reportFiles: 'index.html',
                    reportName: 'Javadoc'
                ])
            }
        }

        //ARCHIVE PROJECT
        stage('Archive') {
            steps {
                echo 'Archiving project...'
                dir(env.CA_DIR) {
                    archiveArtifacts artifacts: 'build/libs/*.war', fingerprint: true
                }
            }
        }

        //CREATE DOCKERFILE
        //Dockerfile gets place
        stage('Create Dockerfile') {
            steps {
                echo 'Creating Dockerfile...'
                dir(env.DOCKER_DIR) {
                    script {
                        def dockerfileContent = """
                        FROM tomcat:10-jdk17-openjdk-slim
                        COPY CA2/Part2/react-and-spring-data-rest-basic/build/libs/*.war /usr/local/tomcat/webapps/
                        EXPOSE 8080
                        CMD ["catalina.sh", "run"]
                        """
                        writeFile file: 'DockerfileCA2Part2', text: dockerfileContent
                    }
                }
            }
        }


    }
}